import Vue from 'vue'
import Router from 'vue-router'

Vue.use(Router)

/* Layout */
import Layout from '@/layout'

/**
 * Note: sub-menu only appear when route children.length >= 1
 * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html
 *
 * hidden: true                   if set true, item will not show in the sidebar(default is false)
 * alwaysShow: true               if set true, will always show the root menu
 *                                if not set alwaysShow, when item has more than one children route,
 *                                it will becomes nested mode, otherwise not show the root menu
 * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb
 * name:'router-name'             the name is used by <keep-alive> (must set!!!)
 * meta : {
    roles: ['admin','editor']    control the page roles (you can set multiple roles)
    title: 'title'               the name show in sidebar and breadcrumb (recommend set)
    icon: 'svg-name'/'el-icon-x' the icon show in the sidebar
    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)
    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set
  }
 */

/**
 * constantRoutes
 * a base page that does not have permission requirements
 * all roles can be accessed
 */
export const constantRoutes = [
  {
    path: '/login',
    component: () => import('@/views/login/index'),
    hidden: true
  },

  {
    path: '/404',
    component: () => import('@/views/404'),
    hidden: true
  },

  {
    path: '/onlinefill',
    component: Layout,
    name: '在线填报',
    meta: { title: '在线填报', icon: 'dashboard' },
    children: [
      {
        path: 'Indicators',
        name:'指标填报',
        component: () => import('@/views/onlinefill/Indicators/index'),
        meta: { title: '指标填报'},
      },
      {
        path: 'newsletter',
        name:'现代化简讯填报',
        component: () => import('@/views/onlinefill/newsletter/index'),
        meta: { title: '现代化简讯填报'},
      },
      {
        path: 'otherchunk',
        name:'其他功能版块',
        component: () => import('@/views/onlinefill/otherchunk/index'),
        meta: { title: '其他功能版块'},
      }
    ]
  },
  {
    path: '/dynamic',
    component: Layout,
   /*  redirect: '/dynamic/evaluation', */
    name: '动态评估',
    meta: { title: '动态评估', icon: 'dashboard' },
    children: [
      {
        path: 'evaluation',
        name:'评估指标',
        component: () => import('@/views/dynamic/evaluation/index'),
        meta: { title: '评估指标'},
      },
      {
        path: 'Historical',
        name:'历史现代化评估指标',
        component: () => import('@/views/dynamic/Historical/index'),
        meta: { title: '历史现代化评估指标'},
      }
    ]
  },

  {
    path: '/intelligent',
    component: Layout,
    name: '智能管理',
    meta: { title: '智能管理', icon: 'el-icon-s-help' },
    children: [
      {
        path: 'database',
        name: '指标数据库审核管理',
        component: () => import('@/views/intelligent/database/index'),
        meta: { title: '指标数据库审核管理' }
      },
      {
        path: 'bulletin',
        name: '简报报送汇编管理',
        component: () => import('@/views/intelligent/bulletin/index'),
        meta: { title: '简报报送汇编管理' }
      },
      {
        path: 'unify',
        name: '统一认证管理',
        component: () => import('@/views/intelligent/unify/index'),
        meta: { title: '统一认证管理' }
      },
      {
        path: 'other',
        name: '其他功能版块',
        component: () => import('@/views/intelligent/other/index'),
        meta: { title: '其他功能版块' }
      }
    ]
  },
  {
    path: '/aviation',
    component: Layout,
    redirect: '/nested/menu1',
    name: '成果展示',
    meta: {
      title: '成果展示',
      icon: 'nested'
    },
    children: [
      {
        path: 'menu1',
        component: () => import('@/views/nested/menu1/index'), // Parent router-view
        name: 'Menu1',
        meta: { title: 'Menu1' },
        children: [
          {
            path: 'menu1-1',
            component: () => import('@/views/nested/menu1/menu1-1'),
            name: 'Menu1-1',
            meta: { title: 'Menu1-1' }
          },
          {
            path: 'menu1-2',
            component: () => import('@/views/nested/menu1/menu1-2'),
            name: 'Menu1-2',
            meta: { title: 'Menu1-2' },
            children: [
              {
                path: 'menu1-2-1',
                component: () => import('@/views/nested/menu1/menu1-2/menu1-2-1'),
                name: 'Menu1-2-1',
                meta: { title: 'Menu1-2-1' }
              },
              {
                path: 'menu1-2-2',
                component: () => import('@/views/nested/menu1/menu1-2/menu1-2-2'),
                name: 'Menu1-2-2',
                meta: { title: 'Menu1-2-2' }
              }
            ]
          },
          {
            path: 'menu1-3',
            component: () => import('@/views/nested/menu1/menu1-3'),
            name: 'Menu1-3',
            meta: { title: 'Menu1-3' }
          }
        ]
      },
      {
        path: 'menu2',
        component: () => import('@/views/nested/menu2/index'),
        name: 'Menu2',
        meta: { title: 'menu2' }
      }
    ]
  },
  {
    path: '/monitoring',
    component: Layout,
    redirect: '/example/table',
    name: '评估全景监控',
    meta: { title: '评估全景监控', icon: 'el-icon-s-help' },
    children: [
      {
        path: 'table',
        name: 'Table',
        component: () => import('@/views/table/index'),
        meta: { title: 'Table', icon: 'table' }
      },
      {
        path: 'tree',
        name: 'Tree',
        component: () => import('@/views/tree/index'),
        meta: { title: 'Tree', icon: 'tree' }
      }
    ]
  },


  // 404 page must be placed at the end !!!
  { path: '*', redirect: '/404', hidden: true }
]

const createRouter = () => new Router({
  // mode: 'history', // require service support
  scrollBehavior: () => ({ y: 0 }),
  routes: constantRoutes
})

const router = createRouter()

// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465
export function resetRouter() {
  const newRouter = createRouter()
  router.matcher = newRouter.matcher // reset router
}

export default router
